/*
The contents of this file are subject to the NOKOS License Version 1.0
(the "License"); you may not use this file except in compliance with the
License.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF  ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.

The Original Software is TVT-tools.

Copyright © 2004 Nokia and others. All Rights Reserved.

Contributor(s): Timo Erkkilä.
*/

#include <string>


// For fast conversion from number to string:
static const char* numberTable[] = {
  "\01""0","\01""1","\01""2","\01""3","\01""4","\01""5","\01""6",
  "\01""7","\01""8","\01""9","\02""10","\02""11","\02""12","\02""13",
  "\02""14","\02""15","\02""16","\02""17","\02""18","\02""19","\02""20",
  "\02""21","\02""22","\02""23","\02""24","\02""25","\02""26","\02""27",
  "\02""28","\02""29","\02""30","\02""31","\02""32","\02""33","\02""34",
  "\02""35","\02""36","\02""37","\02""38","\02""39","\02""40","\02""41",
  "\02""42","\02""43","\02""44","\02""45","\02""46","\02""47","\02""48",
  "\02""49","\02""50","\02""51","\02""52","\02""53","\02""54","\02""55",
  "\02""56","\02""57","\02""58","\02""59","\02""60","\02""61","\02""62",
  "\02""63","\02""64","\02""65","\02""66","\02""67","\02""68","\02""69",
  "\02""70","\02""71","\02""72","\02""73","\02""74","\02""75","\02""76",
  "\02""77","\02""78","\02""79","\02""80","\02""81","\02""82","\02""83",
  "\02""84","\02""85","\02""86","\02""87","\02""88","\02""89","\02""90",
  "\02""91","\02""92","\02""93","\02""94","\02""95","\02""96","\02""97",
  "\02""98","\02""99","\03""100","\03""101","\03""102","\03""103","\03""104",
  "\03""105","\03""106","\03""107","\03""108","\03""109","\03""110","\03""111",
  "\03""112","\03""113","\03""114","\03""115","\03""116","\03""117","\03""118",
  "\03""119","\03""120","\03""121","\03""122","\03""123","\03""124","\03""125",
  "\03""126","\03""127","\03""128","\03""129","\03""130","\03""131","\03""132",
  "\03""133","\03""134","\03""135","\03""136","\03""137","\03""138","\03""139",
  "\03""140","\03""141","\03""142","\03""143","\03""144","\03""145","\03""146",
  "\03""147","\03""148","\03""149","\03""150","\03""151","\03""152","\03""153",
  "\03""154","\03""155","\03""156","\03""157","\03""158","\03""159","\03""160",
  "\03""161","\03""162","\03""163","\03""164","\03""165","\03""166","\03""167",
  "\03""168","\03""169","\03""170","\03""171","\03""172","\03""173","\03""174",
  "\03""175","\03""176","\03""177","\03""178","\03""179","\03""180","\03""181",
  "\03""182","\03""183","\03""184","\03""185","\03""186","\03""187","\03""188",
  "\03""189","\03""190","\03""191","\03""192","\03""193","\03""194","\03""195",
  "\03""196","\03""197","\03""198","\03""199","\03""200","\03""201","\03""202",
  "\03""203","\03""204","\03""205","\03""206","\03""207","\03""208","\03""209",
  "\03""210","\03""211","\03""212","\03""213","\03""214","\03""215","\03""216",
  "\03""217","\03""218","\03""219","\03""220","\03""221","\03""222","\03""223",
  "\03""224","\03""225","\03""226","\03""227","\03""228","\03""229","\03""230",
  "\03""231","\03""232","\03""233","\03""234","\03""235","\03""236","\03""237",
  "\03""238","\03""239","\03""240","\03""241","\03""242","\03""243","\03""244",
  "\03""245","\03""246","\03""247","\03""248","\03""249","\03""250","\03""251",
  "\03""252","\03""253","\03""254","\03""255","\03""256","\03""257","\03""258",
  "\03""259","\03""260","\03""261","\03""262","\03""263","\03""264","\03""265",
  "\03""266","\03""267","\03""268","\03""269","\03""270","\03""271","\03""272",
  "\03""273","\03""274","\03""275","\03""276","\03""277","\03""278","\03""279",
  "\03""280","\03""281","\03""282","\03""283","\03""284","\03""285","\03""286",
  "\03""287","\03""288","\03""289","\03""290","\03""291","\03""292","\03""293",
  "\03""294","\03""295","\03""296","\03""297","\03""298","\03""299","\03""300",
  "\03""301","\03""302","\03""303","\03""304","\03""305","\03""306","\03""307",
  "\03""308","\03""309","\03""310","\03""311","\03""312","\03""313","\03""314",
  "\03""315","\03""316","\03""317","\03""318","\03""319","\03""320","\03""321",
  "\03""322","\03""323","\03""324","\03""325","\03""326","\03""327","\03""328",
  "\03""329","\03""330","\03""331","\03""332","\03""333","\03""334","\03""335",
  "\03""336","\03""337","\03""338","\03""339","\03""340","\03""341","\03""342",
  "\03""343","\03""344","\03""345","\03""346","\03""347","\03""348","\03""349",
  "\03""350","\03""351","\03""352","\03""353","\03""354","\03""355","\03""356",
  "\03""357","\03""358","\03""359","\03""360","\03""361","\03""362","\03""363",
  "\03""364","\03""365","\03""366","\03""367","\03""368","\03""369","\03""370",
  "\03""371","\03""372","\03""373","\03""374","\03""375","\03""376","\03""377",
  "\03""378","\03""379","\03""380","\03""381","\03""382","\03""383","\03""384",
  "\03""385","\03""386","\03""387","\03""388","\03""389","\03""390","\03""391",
  "\03""392","\03""393","\03""394","\03""395","\03""396","\03""397","\03""398",
  "\03""399","\03""400","\03""401","\03""402","\03""403","\03""404","\03""405",
  "\03""406","\03""407","\03""408","\03""409","\03""410","\03""411","\03""412",
  "\03""413","\03""414","\03""415","\03""416","\03""417","\03""418","\03""419",
  "\03""420","\03""421","\03""422","\03""423","\03""424","\03""425","\03""426",
  "\03""427","\03""428","\03""429","\03""430","\03""431","\03""432","\03""433",
  "\03""434","\03""435","\03""436","\03""437","\03""438","\03""439","\03""440",
  "\03""441","\03""442","\03""443","\03""444","\03""445","\03""446","\03""447",
  "\03""448","\03""449","\03""450","\03""451","\03""452","\03""453","\03""454",
  "\03""455","\03""456","\03""457","\03""458","\03""459","\03""460","\03""461",
  "\03""462","\03""463","\03""464","\03""465","\03""466","\03""467","\03""468",
  "\03""469","\03""470","\03""471","\03""472","\03""473","\03""474","\03""475",
  "\03""476","\03""477","\03""478","\03""479","\03""480","\03""481","\03""482",
  "\03""483","\03""484","\03""485","\03""486","\03""487","\03""488","\03""489",
  "\03""490","\03""491","\03""492","\03""493","\03""494","\03""495","\03""496",
  "\03""497","\03""498","\03""499","\03""500","\03""501","\03""502","\03""503",
  "\03""504","\03""505","\03""506","\03""507","\03""508","\03""509","\03""510",
  "\03""511","\03""512","\03""513","\03""514","\03""515","\03""516","\03""517",
  "\03""518","\03""519","\03""520","\03""521","\03""522","\03""523","\03""524",
  "\03""525","\03""526","\03""527","\03""528","\03""529","\03""530","\03""531",
  "\03""532","\03""533","\03""534","\03""535","\03""536","\03""537","\03""538",
  "\03""539","\03""540","\03""541","\03""542","\03""543","\03""544","\03""545",
  "\03""546","\03""547","\03""548","\03""549","\03""550","\03""551","\03""552",
  "\03""553","\03""554","\03""555","\03""556","\03""557","\03""558","\03""559",
  "\03""560","\03""561","\03""562","\03""563","\03""564","\03""565","\03""566",
  "\03""567","\03""568","\03""569","\03""570","\03""571","\03""572","\03""573",
  "\03""574","\03""575","\03""576","\03""577","\03""578","\03""579","\03""580",
  "\03""581","\03""582","\03""583","\03""584","\03""585","\03""586","\03""587",
  "\03""588","\03""589","\03""590","\03""591","\03""592","\03""593","\03""594",
  "\03""595","\03""596","\03""597","\03""598","\03""599","\03""600","\03""601",
  "\03""602","\03""603","\03""604","\03""605","\03""606","\03""607","\03""608",
  "\03""609","\03""610","\03""611","\03""612","\03""613","\03""614","\03""615",
  "\03""616","\03""617","\03""618","\03""619","\03""620","\03""621","\03""622",
  "\03""623","\03""624","\03""625","\03""626","\03""627","\03""628","\03""629",
  "\03""630","\03""631","\03""632","\03""633","\03""634","\03""635","\03""636",
  "\03""637","\03""638","\03""639","\03""640","\03""641","\03""642","\03""643",
  "\03""644","\03""645","\03""646","\03""647","\03""648","\03""649","\03""650",
  "\03""651","\03""652","\03""653","\03""654","\03""655","\03""656","\03""657",
  "\03""658","\03""659","\03""660","\03""661","\03""662","\03""663","\03""664",
  "\03""665","\03""666","\03""667","\03""668","\03""669","\03""670","\03""671",
  "\03""672","\03""673","\03""674","\03""675","\03""676","\03""677","\03""678",
  "\03""679","\03""680","\03""681","\03""682","\03""683","\03""684","\03""685",
  "\03""686","\03""687","\03""688","\03""689","\03""690","\03""691","\03""692",
  "\03""693","\03""694","\03""695","\03""696","\03""697","\03""698","\03""699",
  "\03""700","\03""701","\03""702","\03""703","\03""704","\03""705","\03""706",
  "\03""707","\03""708","\03""709","\03""710","\03""711","\03""712","\03""713",
  "\03""714","\03""715","\03""716","\03""717","\03""718","\03""719","\03""720",
  "\03""721","\03""722","\03""723","\03""724","\03""725","\03""726","\03""727",
  "\03""728","\03""729","\03""730","\03""731","\03""732","\03""733","\03""734",
  "\03""735","\03""736","\03""737","\03""738","\03""739","\03""740","\03""741",
  "\03""742","\03""743","\03""744","\03""745","\03""746","\03""747","\03""748",
  "\03""749","\03""750","\03""751","\03""752","\03""753","\03""754","\03""755",
  "\03""756","\03""757","\03""758","\03""759","\03""760","\03""761","\03""762",
  "\03""763","\03""764","\03""765","\03""766","\03""767","\03""768","\03""769",
  "\03""770","\03""771","\03""772","\03""773","\03""774","\03""775","\03""776",
  "\03""777","\03""778","\03""779","\03""780","\03""781","\03""782","\03""783",
  "\03""784","\03""785","\03""786","\03""787","\03""788","\03""789","\03""790",
  "\03""791","\03""792","\03""793","\03""794","\03""795","\03""796","\03""797",
  "\03""798","\03""799","\03""800","\03""801","\03""802","\03""803","\03""804",
  "\03""805","\03""806","\03""807","\03""808","\03""809","\03""810","\03""811",
  "\03""812","\03""813","\03""814","\03""815","\03""816","\03""817","\03""818",
  "\03""819","\03""820","\03""821","\03""822","\03""823","\03""824","\03""825",
  "\03""826","\03""827","\03""828","\03""829","\03""830","\03""831","\03""832",
  "\03""833","\03""834","\03""835","\03""836","\03""837","\03""838","\03""839",
  "\03""840","\03""841","\03""842","\03""843","\03""844","\03""845","\03""846",
  "\03""847","\03""848","\03""849","\03""850","\03""851","\03""852","\03""853",
  "\03""854","\03""855","\03""856","\03""857","\03""858","\03""859","\03""860",
  "\03""861","\03""862","\03""863","\03""864","\03""865","\03""866","\03""867",
  "\03""868","\03""869","\03""870","\03""871","\03""872","\03""873","\03""874",
  "\03""875","\03""876","\03""877","\03""878","\03""879","\03""880","\03""881",
  "\03""882","\03""883","\03""884","\03""885","\03""886","\03""887","\03""888",
  "\03""889","\03""890","\03""891","\03""892","\03""893","\03""894","\03""895",
  "\03""896","\03""897","\03""898","\03""899","\03""900","\03""901","\03""902",
  "\03""903","\03""904","\03""905","\03""906","\03""907","\03""908","\03""909",
  "\03""910","\03""911","\03""912","\03""913","\03""914","\03""915","\03""916",
  "\03""917","\03""918","\03""919","\03""920","\03""921","\03""922","\03""923",
  "\03""924","\03""925","\03""926","\03""927","\03""928","\03""929","\03""930",
  "\03""931","\03""932","\03""933","\03""934","\03""935","\03""936","\03""937",
  "\03""938","\03""939","\03""940","\03""941","\03""942","\03""943","\03""944",
  "\03""945","\03""946","\03""947","\03""948","\03""949","\03""950","\03""951",
  "\03""952","\03""953","\03""954","\03""955","\03""956","\03""957","\03""958",
  "\03""959","\03""960","\03""961","\03""962","\03""963","\03""964","\03""965",
  "\03""966","\03""967","\03""968","\03""969","\03""970","\03""971","\03""972",
  "\03""973","\03""974","\03""975","\03""976","\03""977","\03""978","\03""979",
  "\03""980","\03""981","\03""982","\03""983","\03""984","\03""985","\03""986",
  "\03""987","\03""988","\03""989","\03""990","\03""991","\03""992","\03""993",
  "\03""994","\03""995","\03""996","\03""997","\03""998","\03""999",
  "\04""1000",

  "\21""ERROR_IN_OTOKENSTREAM" };


// For converting a number to a string:
static lsts_index_t numbers[10];

// Function that gives the number of digits in a number:
static inline unsigned
sizeOfNumber( unsigned number )
{ return static_cast<unsigned>( numberTable[number][0] ); }

static inline void
writeNumber( unsigned number, std::string& str, unsigned& i )
{
    for ( const char* f = &numberTable[number][1]; *f; ++f )
    { str[ i ] = *f; ++i; }
}

static inline void
writeNumberWithZeros( unsigned number, std::string& str, unsigned& i )
{
    if ( number <= 99 )
    {
        str[i] = '0'; ++i;
        if ( number <= 9 ) { str[i] = '0'; ++i; }
    }

    writeNumber( number, str, i );
}

static void
NumberToString( unsigned number, std::string& str )
{
    int i = -1;
    unsigned str_i = 0;
    
    while ( number > 1000 )
    {
        ++i;
        numbers[i] = number;
        numbers[i] %= 1000;
        number /= 1000;
        str_i += 3;
    }
    
    str_i += sizeOfNumber( number );
    str.resize( str_i ); str_i = 0;

    for ( writeNumber( number, str, str_i ); i >= 0; --i )
    { writeNumberWithZeros( numbers[i], str, str_i ); }
}
